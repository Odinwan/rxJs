{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case 'IS_AUTH':\n      return { ...state,\n        isAuth: true,\n        roomId: action.payload.roomId,\n        userName: action.payload.userName\n      };\n\n    case 'SET_DATA':\n      return { ...state,\n        users: action.payload.users,\n        messages: action.payload.messages\n      };\n\n    case 'SET_STATUS':\n      if (state.userName != action.payload.userName) {\n        return { ...state,\n          status: [action.payload]\n        };\n      } else {\n        return { ...state\n        };\n      }\n\n    case 'SET_USERS':\n      return { ...state,\n        users: action.payload\n      };\n\n    case 'NEW_MESSAGE':\n      return { ...state,\n        messages: [...state.messages, action.payload]\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/reducer.ts"],"names":["state","action","type","isAuth","roomId","payload","userName","users","messages","status"],"mappings":"AAEA,gBAAe,CAACA,KAAD,EAAgBC,MAAhB,KAA2C;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAM,SAAN;AACI,aAAO,EACH,GAAGF,KADA;AAEHG,QAAAA,MAAM,EAAC,IAFJ;AAGHC,QAAAA,MAAM,EAACH,MAAM,CAACI,OAAP,CAAeD,MAHnB;AAIHE,QAAAA,QAAQ,EAACL,MAAM,CAACI,OAAP,CAAeC;AAJrB,OAAP;;AAMJ,SAAM,UAAN;AACI,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,KAAK,EAAEN,MAAM,CAACI,OAAP,CAAeE,KAFnB;AAGHC,QAAAA,QAAQ,EAAEP,MAAM,CAACI,OAAP,CAAeG;AAHtB,OAAP;;AAKJ,SAAM,YAAN;AACI,UAAIR,KAAK,CAACM,QAAN,IAAkBL,MAAM,CAACI,OAAP,CAAeC,QAArC,EAA+C;AAC3C,eAAO,EACH,GAAGN,KADA;AAEHS,UAAAA,MAAM,EAAE,CAACR,MAAM,CAACI,OAAR;AAFL,SAAP;AAIH,OALD,MAKO;AACH,eAAO,EACH,GAAGL;AADA,SAAP;AAGH;;AAEL,SAAM,WAAN;AACI,aAAO,EACH,GAAGA,KADA;AAEHO,QAAAA,KAAK,EAACN,MAAM,CAACI;AAFV,OAAP;;AAIJ,SAAM,aAAN;AACI,aAAO,EACH,GAAGL,KADA;AAEHQ,QAAAA,QAAQ,EAAC,CAAC,GAAGR,KAAK,CAACQ,QAAV,EAAmBP,MAAM,CAACI,OAA1B;AAFN,OAAP;;AAIJ;AACI,aAAOL,KAAP;AArCR;AAuCH,CAxCD","sourcesContent":["import {ActionInterface, Reducer} from \"./interfaces\";\n\nexport default (state:Reducer, action:ActionInterface) => {\n    switch (action.type) {\n        case  'IS_AUTH':\n            return {\n                ...state,\n                isAuth:true,\n                roomId:action.payload.roomId,\n                userName:action.payload.userName,\n            }\n        case  'SET_DATA':\n            return {\n                ...state,\n                users: action.payload.users,\n                messages: action.payload.messages,\n            }\n        case  'SET_STATUS':\n            if (state.userName != action.payload.userName) {\n                return {\n                    ...state,\n                    status: [action.payload],\n                }\n            } else {\n                return {\n                    ...state,\n                }\n            }\n\n        case  'SET_USERS':\n            return {\n                ...state,\n                users:action.payload,\n            }\n        case  'NEW_MESSAGE':\n            return {\n                ...state,\n                messages:[...state.messages,action.payload],\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
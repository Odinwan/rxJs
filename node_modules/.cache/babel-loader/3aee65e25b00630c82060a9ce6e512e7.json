{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport CardWrapper from \"./components/Card/CardWrapper\";\n\nconst App = () => {\n  _s();\n\n  /**\n   Создаем центральный стор в котором мы будем хранить фильмы которые получили при первом заходе на страницу\n   тот же редакс только при помощи хуков, на это не обращаем внимания\n   */\n  const [state, dispatch] = React.useReducer(reducer, {\n    movies: []\n  });\n  /**\n  Получаем данные с сервера перед первым рендером приложения\n   */\n\n  useEffect(() => {\n    getData();\n  }, []);\n  /**\n   Запрос на получение фильмов с сервера\n   */\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(`/post`);\n      dispatch({\n        type: \"SET_MOVIES\",\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error.data);\n    }\n  };\n  /**\n   Рендер карточек через обертку\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(CardWrapper, {\n      items: state.movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"qWe5khOmKuKHpd4fxIIozZNT4fc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/App.tsx"],"names":["React","useEffect","reducer","axios","CardWrapper","App","state","dispatch","useReducer","movies","getData","res","get","type","payload","data","error","console","display","justifyContent","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd;AACJ;AACA;AACA;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,UAAN,CAAiBN,OAAjB,EAA0B;AAChDO,IAAAA,MAAM,EAAE;AADwC,GAA1B,CAA1B;AAIA;AACJ;AACA;;AACIR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA;AACJ;AACA;;AACI,QAAMA,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,OAAX,CAAlB;AACAL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACD,IAApB;AACH;AACJ,GAVD;AAYA;AACJ;AACA;;;AACI,sBAAO;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,cAAlC;AAAkDC,MAAAA,OAAO,EAAE;AAA3D,KAAZ;AAAA,2BACH,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEd,KAAK,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAtCD;;GAAMJ,G;;KAAAA,G;AAwCN,eAAeA,GAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport CardWrapper from \"./components/Card/CardWrapper\";\n\nconst App = () => {\n\n    /**\n     Создаем центральный стор в котором мы будем хранить фильмы которые получили при первом заходе на страницу\n     тот же редакс только при помощи хуков, на это не обращаем внимания\n     */\n    const [state, dispatch] = React.useReducer(reducer, {\n        movies: [],\n    });\n\n    /**\n    Получаем данные с сервера перед первым рендером приложения\n     */\n    useEffect(() => {\n        getData();\n    }, []);\n\n    /**\n     Запрос на получение фильмов с сервера\n     */\n    const getData = async () => {\n        try {\n            const res = await axios.get(`/post`);\n            dispatch({\n                type: \"SET_MOVIES\",\n                payload: res.data,\n            });\n        } catch (error) {\n            console.error(error.data);\n        }\n    };\n\n    /**\n     Рендер карточек через обертку\n     */\n    return <div style={{display: \"flex\", justifyContent: \"space-evenly\", padding: 20}}>\n        <CardWrapper items={state.movies}/>\n    </div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
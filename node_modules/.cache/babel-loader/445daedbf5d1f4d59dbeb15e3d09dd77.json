{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/auth/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './SignIn.css';\nimport Notification from \"../notifications/Not\";\nimport moment from \"moment\";\n\nconst SignIn = ({\n  onLogin\n}) => {\n  _s();\n\n  const [userName, setName] = useState('');\n  const [roomId, setRoomId] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [error, setError] = useState('');\n\n  const submit = () => {\n    if (userName !== '') {\n      setIsLoading(true);\n      setTimeout(async () => {\n        const time = moment().format('LT');\n        const user = {\n          roomId,\n          userName,\n          time\n        };\n        await axios.post('/rooms', user).then(res => {\n          onLogin(user);\n          setStatus('');\n          setError('');\n          setIsLoading(false);\n        });\n      }, 1500);\n    } else {\n      setStatus('error');\n      setError('Введите имя');\n    }\n  };\n\n  const animationText = value => {\n    return `${value}...`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      value: error,\n      status: status,\n      setStatus: setStatus,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapperSignIn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0427\\u0430\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          onChange: event => setName(event.target.value),\n          placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading,\n          className: error !== '' ? 'error' : '',\n          onClick: submit,\n          children: isLoading ? animationText('Вход') : 'Войти'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(SignIn, \"6EprGxxysRN/ZQdQHwL6lN+2fy8=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/auth/SignIn.tsx"],"names":["React","useState","axios","Notification","moment","SignIn","onLogin","userName","setName","roomId","setRoomId","isLoading","setIsLoading","status","setStatus","error","setError","submit","setTimeout","time","format","user","post","then","res","animationText","value","event","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios'\nimport {User} from '../../interfaces'\nimport './SignIn.css';\nimport Notification from \"../notifications/Not\";\nimport moment from \"moment\";\n\ninterface SignInProps {\n    socket: any,\n    onLogin: (user: User) => void\n}\n\nconst SignIn = ({onLogin}: SignInProps) => {\n\n    const [userName, setName] = useState<string>('');\n    const [roomId, setRoomId] = useState<number>(1);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [status, setStatus] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n\n    const submit = () => {\n        if (userName !== '') {\n            setIsLoading(true)\n            setTimeout(async () => {\n                const time = moment().format('LT')\n                const user: User = {roomId, userName,time}\n                await axios\n                    .post('/rooms', user)\n                    .then((res) => {\n                        onLogin(user)\n                        setStatus('')\n                        setError('')\n                        setIsLoading(false)\n                    })\n            }, 1500)\n        } else {\n            setStatus('error')\n            setError('Введите имя')\n        }\n    }\n    const animationText = (value: string) => {\n        return `${value}...`\n    }\n    return <div className=\"App\">\n        <Notification value={error} status={status} setStatus={setStatus} setError={setError}/>\n        <div className=\"wrapperSignIn\">\n            <div className=\"containerForm\">\n                <div>Чат</div>\n                <input type=\"text\" value={userName} onChange={event => setName(event.target.value)}\n                       placeholder=\"Ваше Имя\"/>\n                <button disabled={isLoading} className={error !== '' ? 'error' : ''}\n                        onClick={submit}>{isLoading ? animationText('Вход') : 'Войти'}</button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}
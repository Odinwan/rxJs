{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Subject } from \"rxjs\";\nimport Card from \"./Card\";\nconst subject = new Subject();\nexport const messageService = {\n  editMovie: item => subject.next(item),\n  onEditMovie: () => subject.asObservable()\n};\n\nconst CardWrapper = props => {\n  _s();\n\n  const [item, setItem] = useState();\n  useEffect(() => {\n    const subscription = messageService.onEditMovie().subscribe(movie => {\n      if (movie) {\n        setItem(movie);\n      } else {\n        setItem(props.item);\n      }\n    });\n    return subscription.unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    item: item ? item : props.item,\n    setItem: messageService.editMovie\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CardWrapper, \"l/q+TEnF49uE5hItTXus9PsZBcs=\");\n\n_c = CardWrapper;\nexport default CardWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardWrapper\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx"],"names":["React","useEffect","useState","Subject","Card","subject","messageService","editMovie","item","next","onEditMovie","asObservable","CardWrapper","props","setItem","subscription","subscribe","movie","unsubscribe"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAMA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AAEA,OAAO,MAAMG,cAAc,GAAG;AAC1BC,EAAAA,SAAS,EAAGC,IAAD,IAAgBH,OAAO,CAACI,IAAR,CAAaD,IAAb,CADD;AAE1BE,EAAAA,WAAW,EAAE,MAAML,OAAO,CAACM,YAAR;AAFO,CAAvB;;AAKP,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAAA;;AAE7C,QAAM,CAACL,IAAD,EAAMM,OAAN,IAAiBZ,QAAQ,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMc,YAAY,GAAGT,cAAc,CAACI,WAAf,GAA6BM,SAA7B,CAAwCC,KAAD,IAAe;AACvE,UAAIA,KAAJ,EAAW;AACPH,QAAAA,OAAO,CAACG,KAAD,CAAP;AACH,OAFD,MAEO;AACHH,QAAAA,OAAO,CAACD,KAAK,CAACL,IAAP,CAAP;AACH;AACJ,KANoB,CAArB;AAQA,WAAOO,YAAY,CAACG,WAApB;AACH,GAXQ,EAWN,EAXM,CAAT;AAcA,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEV,IAAI,GAACA,IAAD,GAAMK,KAAK,CAACL,IAA5B;AAAkC,IAAA,OAAO,EAAEF,cAAc,CAACC;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAnBD;;GAAMK,W;;KAAAA,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Subject} from \"rxjs\";\nimport {Movie} from \"../../interfaces\";\nimport Card from \"./Card\";\n\ninterface CardWrapperProps {\n    item: Movie\n}\n\nconst subject = new Subject();\n\nexport const messageService = {\n    editMovie: (item:Movie) => subject.next(item),\n    onEditMovie: () => subject.asObservable()\n};\n\nconst CardWrapper = (props: CardWrapperProps) => {\n\n    const [item,setItem] = useState<Movie>()\n\n    useEffect(() => {\n\n        const subscription = messageService.onEditMovie().subscribe((movie:any) => {\n            if (movie) {\n                setItem(movie)\n            } else {\n                setItem(props.item);\n            }\n        });\n\n        return subscription.unsubscribe;\n    }, []);\n\n\n    return <Card item={item?item:props.item} setItem={messageService.editMovie}/>;\n};\n\nexport default CardWrapper;\n\n"]},"metadata":{},"sourceType":"module"}
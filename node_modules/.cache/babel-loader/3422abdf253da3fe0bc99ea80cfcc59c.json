{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/RxExample.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { valueService } from \"./stream\";\n\n/**\n Компонент карточки\n */\nconst RxExample = () => {\n  _s();\n\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n  const [C, setC] = useState(\"\");\n\n  const changeValue = (inputValue, key) => {\n    if (key === \"a\") {\n      valueService.storeValue({\n        a: inputValue,\n        b: B\n      });\n    } else {\n      valueService.storeValue({\n        a: A,\n        b: inputValue\n      });\n    }\n  };\n\n  useEffect(() => {\n    const subscription = valueService.onValues().subscribe({\n      next: value => {\n        setA(value.a);\n        setB(value.b);\n\n        if (value.a !== \"\" && value.b !== \"\") {\n          const res = Number(value.a) + Number(value.b);\n          setC(res.toString());\n        } else {\n          setC(\"\");\n        }\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  console.log(\"render RxExample\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      border: '1px solid black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        fontSize: 25,\n        fontWeight: \"bold\",\n        marginBottom: 20\n      },\n      children: \"Excel \\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: \\u041F\\u0440\\u0438 \\u043F\\u043E\\u043C\\u043E\\u0449\\u0438 RX js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        marginBottom: 100\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexFlow: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: A,\n          onChange: event => changeValue(event.target.value, \"a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexFlow: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: B,\n          onChange: event => changeValue(event.target.value, \"b\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexFlow: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: C\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RxExample, \"9EgwfC74PISmPtk0Y+3tzrFnarQ=\");\n\n_c = RxExample;\nexport default RxExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"RxExample\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/RxExample.tsx"],"names":["React","useEffect","useState","valueService","RxExample","A","setA","B","setB","C","setC","changeValue","inputValue","key","storeValue","a","b","subscription","onValues","subscribe","next","value","res","Number","toString","unsubscribe","console","log","padding","border","display","justifyContent","fontSize","fontWeight","marginBottom","flexFlow","event","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {valueService} from \"./stream\";\n\nexport interface Values {\n    a: string,\n    b: string\n}\n\n/**\n Компонент карточки\n */\nconst RxExample = () => {\n\n    const [A, setA] = useState<string>(\"\");\n    const [B, setB] = useState<string>(\"\");\n    const [C, setC] = useState<string>(\"\");\n\n    const changeValue = (inputValue: string, key: \"a\" | \"b\") => {\n        if (key === \"a\") {\n            valueService.storeValue({\n                a: inputValue,\n                b: B,\n            });\n        }\n        else {\n            valueService.storeValue({\n                a: A,\n                b: inputValue,\n            });\n        }\n    };\n\n    useEffect(() => {\n        const subscription = valueService.onValues().subscribe({\n            next: (value: Values) => {\n                setA(value.a);\n                setB(value.b);\n                if (value.a !== \"\" && value.b !== \"\") {\n                    const res = Number(value.a) + Number(value.b);\n                    setC(res.toString());\n                }\n                else {\n                    setC(\"\");\n                }\n            },\n        });\n\n\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, []);\n\n    console.log(\"render RxExample\");\n\n    return (\n        <div style={{padding:10,border:'1px solid black'}}>\n            <div style={{display: \"flex\", justifyContent: \"center\", fontSize: 25, fontWeight: \"bold\",marginBottom: 20}}>Excel пример: При помощи RX js</div>\n            <div style={{display: \"flex\", justifyContent: \"space-evenly\",marginBottom: 100}}>\n                <div style={{display: \"flex\", flexFlow: \"column\"}}>\n                    <label>A</label>\n                    <input type=\"number\" value={A} onChange={event => changeValue(event.target.value, \"a\")}/>\n                </div>\n                <div style={{display: \"flex\", flexFlow: \"column\"}}>\n                    <label>B</label>\n                    <input type=\"number\" value={B} onChange={event => changeValue(event.target.value, \"b\")}/>\n                </div>\n                <div style={{display: \"flex\", flexFlow: \"column\"}}>\n                    <label>C</label>\n                    <input type=\"number\" value={C}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RxExample;\n\n"]},"metadata":{},"sourceType":"module"}
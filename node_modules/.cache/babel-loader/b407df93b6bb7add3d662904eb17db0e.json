{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/reactrxServer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport CardWrapper from \"./components/Card/CardWrapper\";\nimport SimpleExample from \"./components/FirstExamples/SimpleExample\";\nimport RxExample from \"./components/FirstExamples/RxExample\";\nimport AnyButton from \"./components/FirstExamples/anyButton\";\n\nconst App = () => {\n  _s();\n\n  // /**\n  //  Для первых примеров с Excel\n  //  */\n  const [A, setA] = useState(\"\");\n  const [B, setB] = useState(\"\");\n  const [C, setC] = useState(\"\");\n  /**\n   Создаем центральный стор в котором мы будем хранить фильмы которые получили при первом заходе на страницу\n   тот же редакс только при помощи хуков, на это не обращаем внимания\n   */\n\n  const [state, dispatch] = React.useReducer(reducer, {\n    movies: []\n  });\n  /**\n   Получаем данные с сервера перед первым рендером приложения\n   */\n\n  useEffect(() => {\n    getData();\n  }, []);\n  /**\n   Запрос на получение фильмов с сервера\n   */\n\n  const getData = async () => {\n    try {\n      const res = await axios.get(`/post`);\n      dispatch({\n        type: \"SET_MOVIES\",\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error.data);\n    }\n  };\n  /**\n   Рендер карточек через обертку\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SimpleExample, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RxExample, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AnyButton, {\n        setA: setA,\n        A: A\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        padding: 20,\n        alignItems: \"flex-start\",\n        marginTop: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(CardWrapper, {\n        items: state.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"7JoLdwTqipUBuv8qKNbmhL5u5ic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/reactrxServer/src/App.tsx"],"names":["React","useEffect","useState","reducer","axios","CardWrapper","SimpleExample","RxExample","AnyButton","App","A","setA","B","setB","C","setC","state","dispatch","useReducer","movies","getData","res","get","type","payload","data","error","console","display","justifyContent","padding","alignItems","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA;AACA;AACC,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYT,QAAQ,CAAS,EAAT,CAA1B;AACA,QAAM,CAACU,CAAD,EAAIC,IAAJ,IAAYX,QAAQ,CAAS,EAAT,CAA1B;AACA,QAAM,CAACY,CAAD,EAAIC,IAAJ,IAAYb,QAAQ,CAAS,EAAT,CAA1B;AAED;AACJ;AACA;AACA;;AACI,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACkB,UAAN,CAAiBf,OAAjB,EAA0B;AAChDgB,IAAAA,MAAM,EAAE;AADwC,GAA1B,CAA1B;AAKA;AACJ;AACA;;AACIlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA;AACJ;AACA;;AACI,QAAMA,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,OAAX,CAAlB;AACAL,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAE,YADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAND,CAME,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACD,IAApB;AACH;AACJ,GAVD;AAYA;AACJ;AACA;;;AACI,sBAAO;AAAA,4BACH;AAAK,MAAA,KAAK,EAAE;AAACG,QAAAA,OAAO,EAAC;AAAT,OAAZ;AAAA,8BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEjB,IAAjB;AAAuB,QAAA,CAAC,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAcH;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,OAAO,EAAE,MAAV;AAAiBC,QAAAA,cAAc,EAAE,cAAjC;AAAiDC,QAAAA,OAAO,EAAE,EAA1D;AAA8DC,QAAAA,UAAU,EAAE,YAA1E;AAAuFC,QAAAA,SAAS,EAAC;AAAjG,OAAZ;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEhB,KAAK,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdG;AAAA,kBAAP;AAmBH,CA7DD;;GAAMV,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport reducer from \"./reducer\";\nimport axios from \"axios\";\nimport CardWrapper from \"./components/Card/CardWrapper\";\nimport SimpleExample from \"./components/FirstExamples/SimpleExample\";\nimport RxExample from \"./components/FirstExamples/RxExample\";\nimport AnyButton from \"./components/FirstExamples/anyButton\";\n\nconst App = () => {\n    // /**\n    //  Для первых примеров с Excel\n    //  */\n     const [A, setA] = useState<string>(\"\");\n     const [B, setB] = useState<string>(\"\");\n     const [C, setC] = useState<string>(\"\");\n\n    /**\n     Создаем центральный стор в котором мы будем хранить фильмы которые получили при первом заходе на страницу\n     тот же редакс только при помощи хуков, на это не обращаем внимания\n     */\n    const [state, dispatch] = React.useReducer(reducer, {\n        movies: [],\n    });\n\n\n    /**\n     Получаем данные с сервера перед первым рендером приложения\n     */\n    useEffect(() => {\n        getData();\n    }, []);\n\n    /**\n     Запрос на получение фильмов с сервера\n     */\n    const getData = async () => {\n        try {\n            const res = await axios.get(`/post`);\n            dispatch({\n                type: \"SET_MOVIES\",\n                payload: res.data,\n            });\n        } catch (error) {\n            console.error(error.data);\n        }\n    };\n\n    /**\n     Рендер карточек через обертку\n     */\n    return <>\n        <div style={{display:'block'}}>\n            <SimpleExample/>\n            {/*<SimpleExample*/}\n            {/*    A={A}*/}\n            {/*    B={B}*/}\n            {/*    C={C}*/}\n            {/*    setA={setA}*/}\n            {/*    setC={setC}*/}\n            {/*    setB={setB}*/}\n            {/*/>*/}\n            <RxExample/>\n            <AnyButton setA={setA} A={A} />\n        </div>\n        <div style={{display: \"flex\",justifyContent: \"space-evenly\", padding: 20, alignItems: \"flex-start\",marginTop:1000}}>\n            <CardWrapper items={state.movies}/>\n        </div>\n    </>;\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/chat/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./chat.css\";\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from \"emoji-picker-react\";\nimport moment from \"moment\";\nimport images from \"../../constants\";\nimport { interval } from \"rxjs\";\nimport { debounceTime, map, take } from \"rxjs/operators\";\nconst stream$ = interval(1000).pipe(debounceTime(500), map(value => value), take(3));\n\nconst Chat = ({\n  status,\n  users,\n  socket,\n  userName,\n  messages,\n  addMessage,\n  addStatus\n}) => {\n  _s();\n\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    //@ts-ignore\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const [messageValue, setMessageValue] = useState(\"\");\n  const [filterUser, setFilterUser] = useState(\"\");\n  const [smileOpen, setSmileOpen] = useState(false);\n  const [isWrite, setIsWrite] = useState(false);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  useEffect(scrollToBottom, [messages]);\n  useEffect(() => {\n    stream$.subscribe(value => console.log(value), err => console.log(err), () => {\n      console.log('Complete');\n      stream$.subscribe().unsubscribe();\n    });\n\n    if (!isWrite) {\n      setIsWrite(true);\n      const status = {\n        userName,\n        action: true\n      };\n      socket.emit(\"ROOM:CHANGE_STATUS\", status);\n      addStatus(status);\n      setTimeout(() => {\n        const status = {\n          userName,\n          action: false\n        };\n        setIsWrite(false);\n        socket.emit(\"ROOM:CHANGE_STATUS\", status);\n        addStatus(status);\n      }, 1000);\n    }\n  }, [messageValue]);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    chosenEmoji !== null && setMessageValue(`${messageValue}${chosenEmoji === null || chosenEmoji === void 0 ? void 0 : chosenEmoji.emoji}`);\n  }, [chosenEmoji]);\n\n  const submit = () => {\n    if (messageValue !== \"\") {\n      const obj = {\n        userName,\n        text: messageValue,\n        time: moment().format(\"LT\")\n      };\n      socket.emit(\"ROOM:NEW_MESSAGE\", obj);\n      addMessage(obj);\n      setMessageValue(\"\");\n    }\n  };\n\n  const handleKeypress = e => {\n    if (e.key === \"Enter\") {\n      submit();\n    }\n  };\n\n  const statusMoment = userName => {\n    const name = status.filter(item => item.userName === userName);\n\n    if (name.length !== 0 && name[0].userName) {\n      if (name[0].userName && name[0].action) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"points\",\n          src: images.points,\n          alt: \"пишет\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 24\n        }, this);\n      } else {\n        return \"\";\n      }\n    }\n  };\n\n  const checkMessage = (message, index) => {\n    if (message.userName === userName) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapperMess myMess\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapperMyMessage item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"myMessage message\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoMess\",\n          children: [message.userName, \" \", message.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, index + message.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapperMess anotherMess\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapperAnotherMessage item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"anotherMessage message\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoMess\",\n          children: [message.userName, \" \", message.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, index + message.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: scrollToBottom,\n      style: {\n        position: \"fixed\",\n        right: 15,\n        bottom: 15,\n        height: 30,\n        width: 30\n      },\n      src: images.scrollDown,\n      alt: \"scrollDown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leftPath\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapperFilter\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Поиск\",\n            onChange: e => setFilterUser(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: 25,\n              width: \"auto\",\n              position: \"absolute\",\n              right: 9,\n              bottom: 9\n            },\n            src: images.filter,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapperListUser\",\n          children: users && users.filter(name => !name.toLowerCase().indexOf(filterUser.toLowerCase())).map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              style: {\n                height: 25,\n                width: \"auto\"\n              },\n              src: images.avatar,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 10,\n                  position: \"absolute\",\n                  bottom: -10\n                },\n                children: statusMoment(name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, index + name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightPath\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"\\u0418\\u043C\\u044F \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat\",\n            children: [messages && messages.map((message, index) => checkMessage(message, index)), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef,\n              className: \"list-bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onKeyPress: handleKeypress,\n            value: messageValue,\n            placeholder: \"Enter your message here\",\n            onChange: event => setMessageValue(event.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSmileOpen(!smileOpen),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                height: 25\n              },\n              src: images.happy,\n              alt: \"smile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: submit,\n            src: images.send,\n            alt: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"smileWrapper\",\n          children: smileOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Picker, {\n              onEmojiClick: onEmojiClick,\n              disableAutoFocus: true,\n              skinTone: SKIN_TONE_MEDIUM_DARK,\n              groupNames: {\n                smileys_people: \"PEOPLE\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"LMJ4+aRBH/V5tnsWAhD9qXaQmVQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/chat/Chat.tsx"],"names":["React","useState","useEffect","useRef","Picker","SKIN_TONE_MEDIUM_DARK","moment","images","interval","debounceTime","map","take","stream$","pipe","value","Chat","status","users","socket","userName","messages","addMessage","addStatus","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","messageValue","setMessageValue","filterUser","setFilterUser","smileOpen","setSmileOpen","isWrite","setIsWrite","chosenEmoji","setChosenEmoji","subscribe","console","log","err","unsubscribe","action","emit","setTimeout","onEmojiClick","event","emojiObject","emoji","submit","obj","text","time","format","handleKeypress","e","key","statusMoment","name","filter","item","length","points","checkMessage","message","index","position","right","bottom","height","width","scrollDown","target","toLowerCase","indexOf","avatar","fontSize","happy","send","smileys_people"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport \"./chat.css\";\nimport Picker, {SKIN_TONE_MEDIUM_DARK} from \"emoji-picker-react\";\nimport moment from \"moment\";\nimport images from \"../../constants\";\nimport {Message, Status} from \"../../interfaces\";\nimport {interval} from \"rxjs\";\nimport {debounceTime, delay, map, take} from \"rxjs/operators\";\n\ninterface ChatProps {\n    addMessage: (message: Message) => void\n    addStatus: (status: Status) => void\n    roomId: number,\n    socket: any,\n    userName: string,\n    users: string[],\n    messages: Message[],\n    status: Status[]\n}\n\nconst stream$ = interval(1000).pipe(\n    debounceTime(500),\n    map(value => value),\n    take(3)\n);\n\nconst Chat = ({status, users, socket, userName, messages, addMessage, addStatus}: ChatProps) => {\n\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        //@ts-ignore\n        messagesEndRef.current.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    const [messageValue, setMessageValue] = useState<string>(\"\");\n    const [filterUser, setFilterUser] = useState<string>(\"\");\n    const [smileOpen, setSmileOpen] = useState<boolean>(false);\n    const [isWrite, setIsWrite] = useState<boolean>(false);\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    useEffect(scrollToBottom, [messages]);\n\n    useEffect(() => {\n        stream$.subscribe(\n            (value) => console.log(value),\n            (err) => console.log(err),\n            () => {\n                console.log('Complete')\n                stream$.subscribe().unsubscribe()\n            },\n        )\n        if (!isWrite) {\n            setIsWrite(true);\n            const status = {userName, action: true};\n            socket.emit(\"ROOM:CHANGE_STATUS\", status);\n            addStatus(status);\n            setTimeout(() => {\n                const status = {userName, action: false};\n                setIsWrite(false);\n                socket.emit(\"ROOM:CHANGE_STATUS\", status);\n                addStatus(status);\n            }, 1000);\n        }\n    }, [messageValue]);\n\n    const onEmojiClick = (event: any, emojiObject: any) => {\n        setChosenEmoji(emojiObject);\n    };\n\n    useEffect(() => {\n        // @ts-ignore\n        chosenEmoji !== null && setMessageValue(`${messageValue}${chosenEmoji?.emoji}`);\n    }, [chosenEmoji]);\n\n    const submit = () => {\n        if (messageValue !== \"\") {\n            const obj = {userName, text: messageValue, time: moment().format(\"LT\")};\n            socket.emit(\"ROOM:NEW_MESSAGE\", obj);\n            addMessage(obj);\n            setMessageValue(\"\");\n        }\n    };\n\n    const handleKeypress = (e: { key: string; }) => {\n        if (e.key === \"Enter\") {\n            submit();\n        }\n    };\n\n    const statusMoment = (userName: string) => {\n        const name = status.filter((item) => item.userName === userName);\n        if (name.length !== 0 && name[0].userName) {\n            if (name[0].userName && name[0].action) {\n                return <img className='points' src={images.points} alt={\"пишет\"}/>;\n            }\n            else {\n                return \"\";\n            }\n        }\n    };\n\n    const checkMessage = (message: Message, index: number) => {\n        if (message.userName === userName) {\n            return <div key={index + message.text} className={\"wrapperMess myMess\"}>\n                <div className='wrapperMyMessage item'>\n                    <div className=\"myMessage message\">\n                        {message.text}\n                    </div>\n                </div>\n                <div className={\"infoMess\"}>{message.userName} {message.time}</div>\n            </div>;\n        }\n        else {\n            return <div key={index + message.text} className={\"wrapperMess anotherMess\"}>\n                <div className='wrapperAnotherMessage item'>\n                    <div className=\"anotherMessage message\">\n                        {message.text}\n                    </div>\n                </div>\n                <div className={\"infoMess\"}>{message.userName} {message.time}</div>\n            </div>;\n        }\n    };\n\n    return (\n        <div className=\"ChatContainer\">\n            <img onClick={scrollToBottom} style={{position: \"fixed\", right: 15, bottom: 15, height: 30, width: 30}}\n                 src={images.scrollDown} alt=\"scrollDown\"/>\n            <div className='windowChat'>\n                <div className=\"leftPath\">\n                    <div className='wrapperFilter'>\n                        <input placeholder={\"Поиск\"} onChange={e => setFilterUser(e.target.value)} type=\"text\"/>\n                        <img style={{height: 25, width: \"auto\", position: \"absolute\", right: 9, bottom: 9}}\n                             src={images.filter} alt=\"avatar\"/>\n                    </div>\n                    <div className=\"wrapperListUser\">\n                        {users && users.filter((name) => !name.toLowerCase().indexOf(filterUser.toLowerCase())).map((name, index) =>\n                            <div key={index + name} className=\"item\">\n                                <img className='avatar' style={{height: 25, width: \"auto\"}} src={images.avatar}\n                                     alt=\"avatar\"/>\n                                <div className='description'>\n                                    <div>{name}</div>\n                                    <div\n                                        style={{fontSize: 10, position: \"absolute\", bottom: -10}}>{statusMoment(name)}</div>\n                                </div>\n                            </div>)}\n                    </div>\n                </div>\n                <div className=\"rightPath\">\n                    <div className='header'>Имя канала</div>\n                    <div className='chatWrapper'>\n                        <div className='chat'>\n                            {\n                                messages && messages.map((message, index) => checkMessage(message, index))\n                            }\n                            <div ref={messagesEndRef} className=\"list-bottom\"></div>\n                        </div>\n                    </div>\n                    <div className='footer'>\n                        <input onKeyPress={handleKeypress} value={messageValue} placeholder={\"Enter your message here\"}\n                               onChange={event => setMessageValue(event.target.value)} type=\"text\"/>\n                        <div onClick={() => setSmileOpen(!smileOpen)}><img style={{height: 25}} src={images.happy} alt=\"smile\"/>\n                        </div>\n                        <img onClick={submit} src={images.send} alt=\"send\"/>\n                    </div>\n                    <div className={\"smileWrapper\"}>\n                        {smileOpen && <div>\n                            <Picker onEmojiClick={onEmojiClick} disableAutoFocus={true} skinTone={SKIN_TONE_MEDIUM_DARK}\n                                    groupNames={{smileys_people: \"PEOPLE\"}}/>\n                        </div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/SimpleExample.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n/**\n Компонент карточки\n */\n\nconst SimpleExample = () => {\n  _s();\n\n  const [A, setA] = useState('');\n  const [B, setB] = useState('');\n  const [C, setC] = useState('');\n  useEffect(() => {\n    if (A !== '' && B !== '') {\n      const res = Number(A) + Number(B);\n      setC(res.toString());\n    } else {\n      setC('');\n    }\n  }, [A, B]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: A,\n        onChange: event => setA(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: B,\n        onChange: event => setB(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: C,\n        onChange: event => setC(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleExample, \"lMZdtYBd4IzBkdDxJyvZf470mHU=\");\n\n_c = SimpleExample;\nexport default SimpleExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleExample\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/SimpleExample.tsx"],"names":["React","useEffect","useState","SimpleExample","A","setA","B","setB","C","setC","res","Number","toString","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAGA;AACA;AACA;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,CAAD,EAAGC,IAAH,IAAWH,QAAQ,CAAS,EAAT,CAAzB;AACA,QAAM,CAACI,CAAD,EAAGC,IAAH,IAAWL,QAAQ,CAAS,EAAT,CAAzB;AACA,QAAM,CAACM,CAAD,EAAGC,IAAH,IAAWP,QAAQ,CAAS,EAAT,CAAzB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,CAAC,KAAK,EAAN,IAAYE,CAAC,KAAK,EAAtB,EAA0B;AACtB,YAAMI,GAAG,GAAGC,MAAM,CAACP,CAAD,CAAN,GAAYO,MAAM,CAACL,CAAD,CAA9B;AACAG,MAAAA,IAAI,CAACC,GAAG,CAACE,QAAJ,EAAD,CAAJ;AACH,KAHD,MAGO;AACHH,MAAAA,IAAI,CAAC,EAAD,CAAJ;AACH;AACJ,GAPQ,EAOP,CAACL,CAAD,EAAGE,CAAH,CAPO,CAAT;AASA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEF,CAA5B;AAA+B,QAAA,QAAQ,EAAES,KAAK,IAAIR,IAAI,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAET,CAA5B;AAA+B,QAAA,QAAQ,EAAEO,KAAK,IAAIN,IAAI,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEP,CAA5B;AAA+B,QAAA,QAAQ,EAAEK,KAAK,IAAIJ,IAAI,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMZ,a;;KAAAA,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\n/**\n Компонент карточки\n */\nconst SimpleExample = () => {\n\n    const [A,setA] = useState<string>('')\n    const [B,setB] = useState<string>('')\n    const [C,setC] = useState<string>('')\n\n    useEffect(() => {\n        if (A !== '' && B !== '') {\n            const res = Number(A) + Number(B)\n            setC(res.toString())\n        } else {\n            setC('')\n        }\n    },[A,B])\n\n    return (\n        <div>\n            <div>\n                <label>A</label>\n                <input type=\"number\" value={A} onChange={event => setA(event.target.value)}/>\n            </div>\n            <div>\n                <label>B</label>\n            <input type=\"number\" value={B} onChange={event => setB(event.target.value)}/>\n            </div>\n            <div>\n                <label>C</label>\n            <input type=\"number\" value={C} onChange={event => setC(event.target.value)}/>\n            </div>\n        </div>\n    );\n};\n\nexport default SimpleExample;\n\n"]},"metadata":{},"sourceType":"module"}
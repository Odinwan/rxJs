{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Subject } from \"rxjs\";\nimport Card from \"./Card\";\nconst subject = new Subject();\nexport const messageService = {\n  editMovie: item => subject.next(item),\n  onEditMovie: () => subject.asObservable()\n};\n\nconst CardWrapper = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const subscription = messageService.onEditMovie().subscribe(movies => {\n      if (movies.length !== 0) {\n        setItems(movies);\n      } else {\n        setItems(props.items);\n      }\n    });\n    return subscription.unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.items.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      item: item,\n      setItem: messageService.editMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }, this))\n  }, void 0, false);\n};\n\n_s(CardWrapper, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n\n_c = CardWrapper;\nexport default CardWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardWrapper\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx"],"names":["React","useEffect","useState","Subject","Card","subject","messageService","editMovie","item","next","onEditMovie","asObservable","CardWrapper","props","items","setItems","subscription","subscribe","movies","length","unsubscribe","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAMA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AAEA,OAAO,MAAMG,cAAc,GAAG;AAC1BC,EAAAA,SAAS,EAAGC,IAAD,IAAiBH,OAAO,CAACI,IAAR,CAAaD,IAAb,CADF;AAE1BE,EAAAA,WAAW,EAAE,MAAML,OAAO,CAACM,YAAR;AAFO,CAAvB;;AAKP,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAAA;;AAE7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAU,EAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,YAAY,GAAGV,cAAc,CAACI,WAAf,GAA6BO,SAA7B,CAChBC,MAAD,IAAoB;AAChB,UAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACrBJ,QAAAA,QAAQ,CAACG,MAAD,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,CAACF,KAAK,CAACC,KAAP,CAAR;AACH;AACJ,KAPgB,CAArB;AAUA,WAAOE,YAAY,CAACI,WAApB;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBAAO;AAAA,cACFP,KAAK,CAACC,KAAN,CAAYO,GAAZ,CAAiBb,IAAD,iBAAgB,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,OAAO,EAAEF,cAAc,CAACC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAhC;AADE,mBAAP;AAGH,CArBD;;GAAMK,W;;KAAAA,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Subject} from \"rxjs\";\nimport {Movie} from \"../../interfaces\";\nimport Card from \"./Card\";\n\ninterface CardWrapperProps {\n    items: Movie[]\n}\n\nconst subject = new Subject();\n\nexport const messageService = {\n    editMovie: (item: Movie) => subject.next(item),\n    onEditMovie: () => subject.asObservable(),\n};\n\nconst CardWrapper = (props: CardWrapperProps) => {\n\n    const [items, setItems] = useState<Movie[]>([]);\n\n    useEffect(() => {\n        const subscription = messageService.onEditMovie().subscribe(\n            (movies:Movie[]) => {\n                if (movies.length !== 0) {\n                    setItems(movies)\n                } else {\n                    setItems(props.items)\n                }\n            }\n        );\n\n        return subscription.unsubscribe;\n    }, []);\n\n    return <>\n        {props.items.map((item:Movie) => <Card item={item} setItem={messageService.editMovie}/>)}\n    </> ;\n};\n\nexport default CardWrapper;\n\n"]},"metadata":{},"sourceType":"module"}
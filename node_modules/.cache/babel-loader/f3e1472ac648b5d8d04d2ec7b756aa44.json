{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst Card = props => {\n  _s();\n\n  const [titleValue, setTitleValue] = useState(props.item.title);\n  const [rateValue, setRateValue] = useState(props.item.rate.toString());\n  const [edit, setEdit] = useState(false);\n\n  const saveMovieRequest = () => {\n    let newMovie = {\n      id: props.item.id,\n      rate: Number(rateValue),\n      title: titleValue,\n      image: props.item.image\n    };\n    props.setMovie(newMovie);\n    setEdit(!edit);\n  };\n\n  const chengeRate = value => {\n    setRateValue(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      display: \"flex\",\n      flexFlow: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Rate: \", props.item.rate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Title: \", props.item.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: 300,\n        height: '100%'\n      },\n      src: props.item.image,\n      alt: props.item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), !edit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(!edit),\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this), edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: titleValue,\n        onChange: event => setTitleValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Rate:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: rateValue,\n        onChange: event => chengeRate(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveMovieRequest,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"eRrZJwzY1lKP8lcrRhUeJFY4pGk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/Card.tsx"],"names":["React","useState","Card","props","titleValue","setTitleValue","item","title","rateValue","setRateValue","rate","toString","edit","setEdit","saveMovieRequest","newMovie","id","Number","image","setMovie","chengeRate","value","padding","display","flexFlow","width","height","event","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAOA,MAAMC,IAAI,GAAIC,KAAD,IAAsB;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAEE,KAAK,CAACG,IAAN,CAAWC,KAAb,CAA5C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACE,KAAK,CAACG,IAAN,CAAWI,IAAX,CAAgBC,QAAhB,EAAD,CAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMa,gBAAgB,GAAG,MAAM;AAC3B,QAAIC,QAAQ,GAAG;AACXC,MAAAA,EAAE,EAAEb,KAAK,CAACG,IAAN,CAAWU,EADJ;AAEXN,MAAAA,IAAI,EAAEO,MAAM,CAACT,SAAD,CAFD;AAGXD,MAAAA,KAAK,EAAEH,UAHI;AAIXc,MAAAA,KAAK,EAAEf,KAAK,CAACG,IAAN,CAAWY;AAJP,KAAf;AAMAf,IAAAA,KAAK,CAACgB,QAAN,CAAeJ,QAAf;AACAF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GATD;;AAUA,QAAMQ,UAAU,GAAIC,KAAD,IAAkB;AACjCZ,IAAAA,YAAY,CAACY,KAAD,CAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE,MAAvB;AAA+BC,MAAAA,QAAQ,EAAE;AAAzC,KAAZ;AAAA,4BACI;AAAA,2BAAYrB,KAAK,CAACG,IAAN,CAAWI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,4BAAaP,KAAK,CAACG,IAAN,CAAWC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAE,GAAR;AAAYC,QAAAA,MAAM,EAAC;AAAnB,OAAZ;AAAwC,MAAA,GAAG,EAAEvB,KAAK,CAACG,IAAN,CAAWY,KAAxD;AAA+D,MAAA,GAAG,EAAEf,KAAK,CAACG,IAAN,CAAWC;AAA/E;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIK,CAACK,IAAD,iBAAS;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJd,EAKKA,IAAI,iBAAI;AAAA,8BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAER,UAA1B;AAAsC,QAAA,QAAQ,EAAEuB,KAAK,IAAItB,aAAa,CAACsB,KAAK,CAACC,MAAN,CAAaP,KAAd;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEb,SAA5B;AAAuC,QAAA,QAAQ,EAAEmB,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaP,KAAd;AAApE;AAAA;AAAA;AAAA;AAAA,cAJK,eAKL;AAAQ,QAAA,OAAO,EAAEP,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALK;AAAA,oBALb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjCD;;GAAMZ,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Movie} from \"../../interfaces\";\n\ninterface CardProps {\n    item: Movie\n    setMovie: (item: Movie) => void\n}\nconst Card = (props: CardProps) => {\n    const [titleValue, setTitleValue] = useState( props.item.title);\n    const [rateValue, setRateValue] = useState(props.item.rate.toString());\n    const [edit, setEdit] = useState(false);\n\n    const saveMovieRequest = () => {\n        let newMovie = {\n            id: props.item.id,\n            rate: Number(rateValue),\n            title: titleValue,\n            image: props.item.image,\n        };\n        props.setMovie(newMovie);\n        setEdit(!edit);\n    };\n    const chengeRate = (value:string) => {\n        setRateValue(value)\n    }\n    return (\n        <div style={{padding: 10, display: \"flex\", flexFlow: \"column\"}}>\n            <div>Rate: {props.item.rate}</div>\n            <div>Title: {props.item.title}</div>\n            <img style={{width: 300,height:'100%'}} src={props.item.image} alt={props.item.title}/>\n            {!edit && <button onClick={() => setEdit(!edit)}>Редактировать</button>}\n            {edit && <>\n                <div>Title:</div>\n                <input type=\"text\" value={titleValue} onChange={event => setTitleValue(event.target.value)}/>\n                <div>Rate:</div>\n                <input type=\"number\" value={rateValue} onChange={event => chengeRate(event.target.value)}/>\n                <button onClick={saveMovieRequest}>Сохранить</button>\n            </>}\n        </div>\n    );\n};\n\nexport default Card;\n\n"]},"metadata":{},"sourceType":"module"}
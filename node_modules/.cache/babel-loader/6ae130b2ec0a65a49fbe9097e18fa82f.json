{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/SimpleExample.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n/**\n Компонент карточки\n */\n\nconst SimpleExample = () => {\n  _s();\n\n  const [A, setA] = useState('');\n  const [B, setB] = useState('');\n  const [C, setC] = useState('');\n\n  const checkC = (key, val) => {\n    if ((key === 'a' ? val : A) !== '' && (key === 'b' ? val : B) !== '') {\n      const res = Number(key === 'a' ? val : A) + Number(key === 'b' ? val : B);\n      setC(res.toString());\n    } else {\n      setC('');\n    }\n  }; // useEffect(() => {\n  //     checkC()\n  // },[A,B])\n\n\n  const changeValueA = val => {\n    setA(val);\n    checkC('a', val);\n  };\n\n  const changeValueB = val => {\n    setB(val);\n    checkC('b', val);\n  };\n\n  console.log('render SimpleExample');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: A,\n        onChange: event => changeValueA(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: B,\n        onChange: event => changeValueB(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: C,\n        onChange: event => setC(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleExample, \"7DldIA4Or+HOXlArkeuSrYCpVF0=\");\n\n_c = SimpleExample;\nexport default SimpleExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleExample\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/SimpleExample.tsx"],"names":["React","useState","SimpleExample","A","setA","B","setB","C","setC","checkC","key","val","res","Number","toString","changeValueA","changeValueB","console","log","display","justifyContent","flexFlow","event","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\n/**\n Компонент карточки\n */\nconst SimpleExample = () => {\n\n    const [A,setA] = useState<string>('')\n    const [B,setB] = useState<string>('')\n    const [C,setC] = useState<string>('')\n\n    const checkC = (key?: 'a' | 'b',val?:string) => {\n        if ((key === 'a'? val : A) !== '' && (key === 'b'? val : B) !== '') {\n            const res = Number(key === 'a'? val : A) + Number(key === 'b'? val : B)\n            setC(res.toString())\n        } else {\n            setC('')\n        }\n    }\n\n    // useEffect(() => {\n    //     checkC()\n    // },[A,B])\n\n    const changeValueA = (val:string) => {\n        setA(val)\n        checkC('a',val)\n    }\n\n    const changeValueB = (val:string) => {\n        setB(val)\n        checkC('b',val)\n    }\n\n    console.log('render SimpleExample')\n\n    return (\n        <div style={{display: \"flex\",justifyContent:\"space-evenly\"}}>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>A</label>\n                {/*<input type=\"number\" value={A} onChange={event => setA(event.target.value)}/>*/}\n                <input type=\"number\" value={A} onChange={event => changeValueA(event.target.value)}/>\n            </div>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>B</label>\n            {/*<input type=\"number\" value={B} onChange={event => setB(event.target.value)}/>*/}\n            <input type=\"number\" value={B} onChange={event => changeValueB(event.target.value)}/>\n            </div>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>C</label>\n            <input type=\"number\" value={C} onChange={event => setC(event.target.value)}/>\n            </div>\n        </div>\n    );\n};\n\nexport default SimpleExample;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/RxExample.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { valueService } from \"./stream\";\n\n/**\n Компонент карточки\n */\nconst RxExample = () => {\n  _s();\n\n  const [A, setA] = useState('');\n  const [B, setB] = useState('');\n  const [C, setC] = useState('');\n\n  const changeValue = (inputValue, key) => {\n    if (key === 'a') {\n      valueService.storeValue({\n        a: inputValue,\n        b: B\n      });\n    } else {\n      valueService.storeValue({\n        a: A,\n        b: inputValue\n      });\n    }\n  };\n\n  useEffect(() => {\n    const subscription = valueService.onValues().subscribe({\n      next: value => {\n        setA(value.a);\n        setB(value.b);\n\n        if (value.a !== '' && value.b !== '') {\n          const res = Number(value.a) + Number(value.b);\n          setC(res.toString());\n        } else {\n          setC('');\n        }\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: A,\n        onChange: event => changeValue(event.target.value, 'a')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: B,\n        onChange: event => changeValue(event.target.value, 'b')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexFlow: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: C\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RxExample, \"lMZdtYBd4IzBkdDxJyvZf470mHU=\");\n\n_c = RxExample;\nexport default RxExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"RxExample\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/reactrxServer/src/components/FirstExamples/RxExample.tsx"],"names":["React","useEffect","useState","valueService","RxExample","A","setA","B","setB","C","setC","changeValue","inputValue","key","storeValue","a","b","subscription","onValues","subscribe","next","value","res","Number","toString","unsubscribe","console","log","display","justifyContent","flexFlow","event","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {valueService} from \"./stream\";\n\nexport interface Values {\n    a: string,\n    b:string\n}\n/**\n Компонент карточки\n */\nconst RxExample = () => {\n\n    const [A,setA] = useState<string>('')\n    const [B,setB] = useState<string>('')\n    const [C,setC] = useState<string>('')\n\n    const changeValue = (inputValue:string,key: 'a' | 'b') => {\n        if (key === 'a') {\n            valueService.storeValue({\n                a: inputValue,\n                b: B\n            })\n        } else {\n            valueService.storeValue({\n                a: A,\n                b: inputValue\n            })\n        }\n    }\n\n    useEffect(() => {\n        const subscription = valueService.onValues().subscribe({\n                next:  (value:Values) => {\n                    setA(value.a)\n                    setB(value.b)\n                    if (value.a !== '' && value.b !== '') {\n                        const res = Number(value.a) + Number(value.b)\n                        setC(res.toString())\n                    } else {\n                        setC('')\n                    }\n                },\n            });\n\n\n        return () => {\n            subscription.unsubscribe();\n        }\n    }, []);\n\n    console.log('render')\n\n    return (\n        <div style={{display: \"flex\",justifyContent:\"space-evenly\"}}>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>A</label>\n                <input type=\"number\" value={A} onChange={event => changeValue(event.target.value,'a')}/>\n            </div>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>B</label>\n                <input type=\"number\" value={B} onChange={event => changeValue(event.target.value,'b')}/>\n            </div>\n            <div style={{display: \"flex\",flexFlow:\"column\"}}>\n                <label>C</label>\n                <input type=\"number\" value={C} />\n            </div>\n        </div>\n    );\n};\n\nexport default RxExample;\n\n"]},"metadata":{},"sourceType":"module"}
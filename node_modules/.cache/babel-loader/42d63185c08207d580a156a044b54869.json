{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/Card.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BehaviorSubject } from \"rxjs\";\nconst subject$ = new BehaviorSubject({});\n\nconst withObservableStream = (observable, triggers, initialState) => Component => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    console.log(props);\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n      let subscription = observable.subscribe(newState => setState({ ...newState\n      }));\n      return subscription.unsubscribe();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      ...state,\n      ...triggers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n};\n\nconst messageService = {\n  sendMessage: item => {\n    subject$.next(item);\n    console.log(item);\n  }\n};\n\nconst Card = props => {\n  _s2();\n\n  console.log('asdfasd', props);\n  const [item, setItem] = useState(props.item);\n  const {\n    rate,\n    title,\n    image,\n    id\n  } = item; //\n  // const [titleValue, setTitleValue] = useState(title);\n  // const [rateValue, setRateValue] = useState(rate.toString());\n\n  const [edit, setEdit] = useState(false); // const saveMovieRequest = () => {\n  //     let newMovie = {\n  //         id: id,\n  //         rate: Number(rateValue),\n  //         title: titleValue,\n  //         image: image\n  //     }\n  //     messageService.sendMessage(newMovie)\n  //     setEdit(!edit)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      display: \"flex\",\n      flexFlow: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rate: \", rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Title: \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      width: 200,\n      height: 300,\n      src: image,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), !edit && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(!edit),\n      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(Card, \"rIHZ3QrvaVCc2tRR1aaFH1nRpZE=\");\n\n_c = Card;\nexport default withObservableStream(subject$, {\n  sendMessage: item => {\n    subject$.next(item);\n  }\n}, {\n  item: {}\n})(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/Card.tsx"],"names":["React","useEffect","useState","BehaviorSubject","subject$","withObservableStream","observable","triggers","initialState","Component","props","console","log","state","setState","subscription","subscribe","newState","unsubscribe","messageService","sendMessage","item","next","Card","setItem","rate","title","image","id","edit","setEdit","padding","display","flexFlow","justifyContent"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {BehaviorSubject,Subject} from \"rxjs\";\nimport {Movie} from \"../../interfaces\";\n\ninterface CardProps {\n    item: Movie\n}\nconst subject$ = new BehaviorSubject({})\n\nconst withObservableStream = (\n    observable: { subscribe: (arg0: (newState: any) => void) => any },\n    triggers: { sendMessage: (item: Movie) => void },\n    initialState: Readonly<{}>,\n) => (Component: React.ComponentType<CardProps>) => {\n    return (props:CardProps) => {\n        console.log(props)\n        const [state, setState] = useState(initialState)\n        useEffect(() => {\n            let subscription = observable.subscribe(newState =>\n                setState({...newState}),\n            );\n            return subscription.unsubscribe();\n        },[])\n\n        return (\n            <Component {...props} {...state} {...triggers} />\n        );\n    }\n};\n\n\nconst messageService = {\n    sendMessage: (item:Movie) => {\n        subject$.next(item);\n        console.log(item)\n    },\n};\n\n\nconst Card = (props: CardProps) => {\n    console.log('asdfasd',props)\n    const [item, setItem] = useState<Movie>(props.item);\n    const {rate, title, image,id} = item;\n    //\n    // const [titleValue, setTitleValue] = useState(title);\n    // const [rateValue, setRateValue] = useState(rate.toString());\n    const [edit, setEdit] = useState(false);\n\n    // const saveMovieRequest = () => {\n    //     let newMovie = {\n    //         id: id,\n    //         rate: Number(rateValue),\n    //         title: titleValue,\n    //         image: image\n    //     }\n    //     messageService.sendMessage(newMovie)\n    //     setEdit(!edit)\n    // };\n\n    return <div style={{padding: 10, display: \"flex\", flexFlow: \"column\"}}>\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n            <div>Rate: {rate}</div>\n            <div>Title: {title}</div>\n        </div>\n        <img width={200} height={300} src={image} alt={title}/>\n        {!edit && <button onClick={() => setEdit(!edit)}>Редактировать</button>}\n        {/*{edit && <>*/}\n        {/*    <div>Title:</div>*/}\n        {/*    <input type=\"text\" value={titleValue} onChange={event => setTitleValue(event.target.value)}/>*/}\n        {/*    <div>Rate:</div>*/}\n        {/*    <input type=\"text\" value={rateValue} onChange={event => setRateValue(event.target.value)}/>*/}\n        {/*    <button onClick={saveMovieRequest}>Сохранить</button>*/}\n        {/*</>}*/}\n    </div>;\n};\n\nexport default withObservableStream(\n    subject$,\n    {\n        sendMessage: (item:Movie) => {\n            subject$.next(item);\n        },\n    },\n    {\n        item: {},\n    },\n)(Card);\n\n"]},"metadata":{},"sourceType":"module"}
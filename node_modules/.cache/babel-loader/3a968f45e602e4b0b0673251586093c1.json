{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { BehaviorSubject } from \"rxjs\";\nimport Card from \"./Card\";\n\nconst CardWrapper = props => {\n  _s();\n\n  const subject$ = new BehaviorSubject(props.item);\n  useEffect(() => {\n    const sub = subject$.subscribe();\n    return sub.unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    item: subject$.value,\n    trigger: item => subject$.next(item)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CardWrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CardWrapper;\nexport default CardWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardWrapper\");","map":{"version":3,"sources":["/Users/block/PhpstormProjects/react-socket-node-expreess/src/components/Card/CardWrapper.tsx"],"names":["React","useEffect","BehaviorSubject","Card","CardWrapper","props","subject$","item","sub","subscribe","unsubscribe","value","next"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAyC,OAAzC;AACA,SAAQC,eAAR,QAAuC,MAAvC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAA6B;AAAA;;AAC7C,QAAMC,QAAQ,GAAG,IAAIJ,eAAJ,CAAoBG,KAAK,CAACE,IAA1B,CAAjB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,GAAG,GAAGF,QAAQ,CAACG,SAAT,EAAZ;AACA,WAAOD,GAAG,CAACE,WAAJ,EAAP;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,QAAQ,CAACK,KAArB;AAA4B,IAAA,OAAO,EAAGJ,IAAD,IAAiBD,QAAQ,CAACM,IAAT,CAAcL,IAAd;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CATD;;GAAMH,W;;KAAAA,W;AAWN,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {BehaviorSubject, Subject} from \"rxjs\";\nimport {Movie} from \"../../interfaces\";\nimport Card from \"./Card\";\n\ninterface CardWrapperProps {\n    item: Movie\n}\n\nconst CardWrapper = (props: CardWrapperProps) => {\n    const subject$ = new BehaviorSubject(props.item);\n\n    useEffect(() => {\n        const sub = subject$.subscribe();\n        return sub.unsubscribe();\n    }, []);\n\n    return <Card item={subject$.value} trigger={(item: Movie) => subject$.next(item)}/>;\n};\n\nexport default CardWrapper;\n\n"]},"metadata":{},"sourceType":"module"}